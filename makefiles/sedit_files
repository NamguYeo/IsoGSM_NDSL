#!/bin/sh
#
#  this script replaces @XXX@ with defined variables and also insert files
#  where speficied by #insert-insert_file_name.
#  variables and insert_file_name are all defined in def/sysvars.defs and
#  definition script and intsert files generated by def/get_sysvars script
#  note that insert_file must exist in the current directory
#
#  note also that sed.dat file needs to be provided
#
#find -L . -name '*.in' >infiles.$$
find . -name '*.in' >infiles.$$
find ../expscr -name '*.in' >>infiles.$$
excludes=$1
if [ ! -z "$excludes" ] ; then
	if [ -s $excludes ] ; then
		for exclude in `cat $1` 
		do
			sed "\%$exclude%d" infiles.$$ >tmp.$$
			cp tmp.$$ infiles.$$
		done
	else
		cp infiles.$$ infiles.out
	fi
else
	cp infiles.$$ infiles.out
fi
for file in `cat infiles.$$`
do
        filex=`echo $file | sed 's/.in$//g'`
	#echo "creating $filex"
	#
	file2=$file
	grep '^#insert-' $file >/dev/null 2>/dev/null
	cci=$?
	#
	#  Insert multiple lines from insert_file_name after the lines begin 
	#  with #insert-insert_file_name.
	#  This is used to insert header lines, domain specifications, etc.
	#
	cp $file tmp.$$
	if [ $cci -eq 0 ] ; then
		for insert in `grep '^#insert-' tmp.$$`
		do
			insert_file=`echo $insert | cut -d'-' -f2 | sed 's/ *//g'`
			sed "/^#insert-$insert_file/r $insert_file" tmp.$$ | \
				sed "/^#insert-$insert_file/d" >tmp2.$$
			mv tmp2.$$ tmp.$$
			file2=tmp.$$
		done
	fi
	#
 	#  sedit
 	#
	grep '@[A-Z0-9_][A-Z0-9_]*@' $file2 >/dev/null 2>/dev/null
	cca=$?
	if [ $cca -eq 0 ] ; then
		sed -f sed.dat $file2 >$filex
	else
		cp $file2 $filex
	fi
        chmod a+x $filex
done
rm infiles.$$ tmp.$$ 2>/dev/null
exit 0
