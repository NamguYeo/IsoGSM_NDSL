      SUBROUTINE UNPINDX(CBUF,NLEN,NNUM,KPDS,KGDS,LSKIP,LGRIB,IRET)
C$$$  SUBPROGRAM DOCUMENTATION BLOCK
C
C SUBPROGRAM: UNPINDX        UNPACKS GRIB INDEX BUFFER CONTENTS 
C   PRGMMR: IREDELL          ORG: W/NMC23     DATE: 95-12-13
C     MODIFIED BY KANAMITSU
C
C ABSTRACT: UNPACKS A GRIB INDEX BUFFER.
C
C PROGRAM HISTORY LOG:
C   95-12-13  KANAMITSU
C
C USAGE:    CALL UNPINDX(CBUF,NLEN,NNUM,KPDS,KGDS,LSKIP,LGRIB,IRET)
C   INPUT ARGUMENTS:
C     CBUF         CHARACTER*1 (NLEN*NNUM) BUFFER CONTAINING INDEX DATA
C     NLEN         INTEGER LENGTH OF EACH INDEX RECORD IN BYTES
C     NNUM         INTEGER NUMBER OF INDEX RECORDS
C   OUTPUT ARGUMENTS:
C     KPDS         INTEGER (25) UNPACKED PDS PARAMETERS
C     KGDS         INTEGER (22) UNPACKED GDS PARAMETERS
C     LSKIP        INTEGER NUMBER OF BYTES TO SKIP
C     LGRIB        INTEGER NUMBER OF BYTES TO READ
C     IRET         INTEGER RETURN CODE
C                    0      ALL OK
C                    1      REQUEST NOT FOUND
C
C REMARKS: SUBPROGRAM CAN BE CALLED FROM A MULTIPROCESSING ENVIRONMENT.
C   THIS SUBPROGRAM IS INTENDED FOR PRIVATE USE BY GETGB ROUTINES ONLY.
C
C SUBPROGRAMS CALLED:
C   GBYTE          UNPACK BYTES
C   FI632          UNPACK PDS
C   FI633          UNPACK GDS
C
C ATTRIBUTES:
C   LANGUAGE: FORTRAN 77
C   MACHINE:  CRAY, WORKSTATIONS
C
C$$$
      CHARACTER*1 CBUF(NLEN*NNUM)
      INTEGER KPDS(25,NNUM),KGDS(22,NNUM)
      DIMENSION LSKIP(NNUM),LGRIB(NNUM)
      CHARACTER CPDS(80)*1,CGDS(80)*1
      INTEGER KPTR(16)
C
C
C  Loop for NNUM
C
      DO K=1,NNUM
C
C  PDS
C
        DO I=1,36
          CPDS(I)=CBUF((K-1)*NLEN+25+I)
        ENDDO
        DO I=1,16
          KPTR(I)=0
        ENDDO
        CALL GBYTE(CBUF,KPTR(3),(K-1)*NLEN*8+25*8,3*8)
        KPDS(18,K)=1
        CALL GBYTE(CPDS,KPDS(4,K),7*8,8)
        CALL FI632(CPDS,KPTR,KPDS(1,K),IRET)
C
C  GDS
C
        DO I=1,42
          CGDS(I)=CBUF((K-1)*NLEN+53+I)
        ENDDO
        DO I=1,16
          KPTR(I)=0
        ENDDO
        CALL FI633(CGDS,KPTR,KGDS(1,K),IRET)
C
C LSKIP and NLEN
C
        CALL GBYTE(CBUF,LSKIP(K),(K-1)*NLEN*8,4*8)
        CALL GBYTE(CBUF,LGRIB(K),(K-1)*NLEN*8+20*8,4*8)
C
      ENDDO
C
      RETURN
      END
