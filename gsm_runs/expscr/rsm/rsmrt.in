#insert-HEADER
#
set -ax
#
#  rsm integration from ready made initial condition
#
# ---------------  User changeable parameters -----------------
#
# run directory name
#
RUNNAME=r_000
#
#  rsm domain specification
# 
#insert-domainspec
#
#  model parameters
#
ENDHOUR=48
DELTAT_REG=@DELTAT_REG_WINTER@
NESTING_HOUR=6
SWHR_REG=1
LWHR_REG=1
INTSFCX=24
INCHOUR=6
INTPOST=3
INTPGB=$INTPOST
INTRESTART=6
#
# ------------- chenge below for expert only ----------------------
#
FCST_RESTART=yes
#
DELETE_SIGGLOB=yes
#
if [ $INCHOUR -lt $INTSFCX ] ; then
	echo "INCHOUR < INTSFCX"
	echo "INCHOUR set to INTSFCX to make sure sfc is called."
fi

#
# You may modify EXECDIR to /tmp directory and keep this
# scripts on your permanent disk.
#
EXECDIR=@RUNS_DIR@/$RUNNAME
#
#
# -------  do not change below  -------------------------------------
#
# ready-made initial condition and base field
#
FCST_NPES=@NPES@
#
read g_execdir <../gruns/gsm_run_dir.txt
#
GLOBAL_SIG_INITIAL=$g_execdir/sig.ft00
GLOBAL_SFC_INITIAL=$g_execdir/sfc.ft00
INITIAL_SFC_FILE_TYPE=noa1
BASE_SIG=$g_execdir/sig.ft\${FH}
#
SST_ANL_T0=$g_execdir/../ncepftp/sstgrb.\$YYYYS\$MMS\$DDS\$HHS
ICE_ANL_T0=$g_execdir/../ncepftp/icegrb.\$YYYYS\$MMS\$DDS\$HHS
SNO_ANL_T0=$g_execdir/../ncepftp/snogrb.\$YYYYS\$MMS\$DDS\$HHS
SST_ANL=
SNO_ANL=
ICE_ANL=
#
YYYYS=`echo $g_execdir | sed 's?.*/??g' | cut -c 4-7`
MMS=`echo $g_execdir | sed 's?.*/??g' | cut -c 8-9`
DDS=`echo $g_execdir | sed 's?.*/??g' | cut -c 10-11`
HHS=`echo $g_execdir | sed 's?.*/??g' | cut -c 12-13`
#
#   coarse rsm domain specification
# 
CPROJ=0.0
CTRUTH=0.0
CORIENT=0.0
CDELX=0.0
CDELY=0.0
CCENLAT=0.0
CCENLON=0.0
CLFTGRD=0.0
CBTMGRD=0.0
#
mkdir -p $EXECDIR 2>/dev/null
scrnam=`echo $0 | sed 's?.*/??g'`
cp $0 $EXECDIR/0LOG.$scrnam
ls -l @MODEL_DIR@/bin >$EXECDIR/0LOG.bindates
cd $EXECDIR
#
rm ERROR.out 2>/dev/null
echo "`date` $0: started" >>ERROR.out
#
#  create namelist regional domain data
#
cat >rsm.parm <<EOF
 &NAMLOC
 RPROJ    = $RPROJ,
 RTRUTH   = $RTRUTH,
 RORIENT  = $RORIENT,
 RDELX    = $RDELX,
 RDELY    = $RDELY,
 RCENLAT  = $RCENLAT,
 RCENLON  = $RCENLON,
 RLFTGRD  = $RLFTGRD,
 RBTMGRD  = $RBTMGRD,
 CPROJ    = $CPROJ,
 CTRUTH   = $CTRUTH,
 CORIENT  = $CORIENT,
 CDELX    = $CDELX,
 CDELY    = $CDELY,
 CCENLAT  = $CCENLAT,
 CCENLON  = $CCENLON,
 CLFTGRD  = $CLFTGRD,
 CBTMGRD  = $CBTMGRD,
/
EOF
#
#  automatic restart
#
if [ -s r_sigit -a -s r_sigitdt -a -s r_sfci -a $FCST_RESTART = yes ] ; then
	#
	#  restart
	#
    ft=`ls -lt r_sigit.ft* | head -1 | awk '{print $9}' | sed 's/.*\.ft//g'`
    cp r_sigit.ft$ft r_sigit || exit 8
    cp r_sigitdt.ft$ft r_sigitdt || exit 8
    cp r_sfc.ft$ft r_sfci || exit 8
	h=`@LIBS_DIR@/etc/fhour r_sigit`
	echo fhour in the r_sigit file = $h
else
	#
	#  cold start
	#
	#  Initial condition.  Convert to native format
	#
	INPUT_RESOLUTION=t@JCAP@k@LEVS@
	export INPUT_RESOLUTION
	#
	#  generate rsm initial condition from global files
	#
	if [ ! -s r_sigit.ft00 -o ! -s r_sfc.ft00 ] ; then
		#
		#  convert input global files to binary
		#
		@LIBS_DIR@/etc/scnvrt gsm $INITIAL_SFC_FILE_TYPE \
			@JCAP@:@LONF@:@LATG@:@LEVS@ \
			$YYYYS:-1:-1:-1:-1 \
			bin:bin \
			$GLOBAL_SIG_INITIAL:$GLOBAL_SFC_INITIAL \
			sig.ft00:sfc.ft00 || exit 8
		#
		#  horizontal transform/interpolation
		#
		@RUNSCR_DIR@/r_inpg $INITIAL_SFC_FILE_TYPE \
			sig.ft00:sfc.ft00 \
			r_sigit.ft00:r_sfc.ft00 || exit 8
	fi
	#
	#  renew r_sfc files using grib data input
	#
  SST_GRB_T0=`eval echo $SST_ANL_T0`
  SNO_GRB_T0=`eval echo $SNO_ANL_T0`
  SCV_GRB_T0=`eval echo $SCV_ANL_T0`
  ICE_GRB_T0=`eval echo $ICE_ANL_T0`
  export SST_GRB_T0 SNO_GRB_T0 SCV_GRB_T0 ICE_GRB_T0
	@RUNSCR_DIR@/rsfc0 r_sfc.ft00 r_sfci $INITIAL_SFC_FILE_TYPE || exit 8
	cp r_sfci r_sfc.ft00
	cp r_sigit.ft00 r_sigit
	cp r_sigit r_sigitdt
	#
	h=0
fi
#
#  forecast loop
#
while [ $h -lt $ENDHOUR ];do
	h=`expr $h + 0`
	hx=`expr $h + $INCHOUR`
	if [ $hx -lt 10 ]; then hx=0$hx; fi
	#
	#  link base field to properly named file	
	#
	fhend=`expr $INCHOUR + $NESTING_HOUR`
	modf=`expr $fhend \/ $NESTING_HOUR`
	if [ `expr $modf \* $NESTING_HOUR` -ne $fhend ] ; then
		fhend=`expr \( $modf + 1 \) \* $NESTING_HOUR`
	fi
	fh=0
	while [ $fh -le $fhend ] ; do
		FH=`expr $fh + $h`
		FH=`expr \( $FH \/ $NESTING_HOUR \) \* $NESTING_HOUR`
		if [ $FH -gt $ENDHOUR ] ; then
			break
		fi
		if [ $FH -lt 10 ]; then FH=0$FH; fi
		if [ ! -s base_sig.ft$FH ] ; then
			fname=`eval echo $BASE_SIG`
			@LIBS_DIR@/etc/scnvrt gsm $INITIAL_SFC_FILE_TYPE \
				@JCAP@:@LONF@:@LATG@:@LEVS@ \
				$YYYYS:-1:-1:-1:-1 \
				bin:bin \
				$fname:dummy \
				base_sig.ft$FH:dummy1 || exit 8
				@RUNSCR_DIR@/basefnam base_sig.ft$FH
		fi
		fh=`expr $fh + $NESTING_HOUR`
	done
	#
	#  generate forecast namelist data
	#
	SST_GRB=`eval echo $SST_ANL`
	SNO_GRB=`eval echo $SNO_ANL`
	ICE_GRB=`eval echo $ICE_ANL`
	export SST_GRB SNO_GRB ICE_GRB
	@RUNSCR_DIR@/r_fcstparm $INCHOUR $ENDHOUR $DELTAT_REG \
							$NESTING_HOUR $INTPOST $INTPGB $INTSFCX $INTRESTART || exit 8
	#
	#  Execute forecast
	#
	export MP_SET_NUMTHREADS
	@RUNSCR_DIR@/r_fcst $h $hx $INCHOUR $INTPOST || exit 8
	#
	#  copy files for next forecast segment
	#
	cp r_sigit.ft$hx  r_sigit   || exit 8
	mv r_sigitdt.ft$hx r_sigitdt || exit 8
	cp r_sfc.ft$hx  r_sfci    || exit 8
	#
	#  post processing
	#
	if [ "@DOPOST@" = DEFINED ] ; then
		@RUNSCR_DIR@/r_post $h $hx $INTPOST || exit 8
	elif [ "@CATPGB@ " = DEFINED ] ; then
		@LIBS_DIR@/etc/catpgb
	fi
	#
	h=$hx
done
if [ @MACHINE@ = mac -a @MARCH@ = mpi ] ; then
	lamclean
	lamhalt
fi
