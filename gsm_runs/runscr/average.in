#!/bin/sh
#
# grib file average calculation
#
# $1 is the grib file specification (example: pgb, flx, dia)
# $2 is starting forecast hour (at least 2-digit)
# $3 is ending forecast hour (at least 2-digit)
# $4 is forecast hour interval
# $5 is output file name
#
#  This script assumes that the input grib files are named as:
#    $1.ft?? where '??' is forecast hour of at least 2 digit
#
if [ $# -ne 5 ] ; then
	echo "`date` $0: argument error" >>ERROR.out
	exit 8
fi
file=$1
fhs=$2
fhe=$3
intvl=$4
outgrib=$5
#
echo "@LIBS_DIR@/etc/grib1.kpds5.vsn21" >grmean.$file.$fhs-$fhe.parm
echo "@LIBS_DIR@/etc/grib1.kpds6.vsn21" >>grmean.$file.$fhs-$fhe.parm
echo "0" >>grmean.$file.$fhs-$fhe.parm
echo "$outgrib" >>grmean.$file.$fhs-$fhe.parm
rm temp.parm.$$ 2>/dev/null
fh=$fhs
count=1
while [ $fh -le $fhe ] ; do
	fhr=$fh
	if [ $fh -lt 10 ] ; then
		fhr=0$fh
	fi
	if [ ! -s $file.ft$fhr ] ; then
		echo "$file.ft$fhr does not exist. average for fhr=$fhs-$fhe terminating."
		exit 8
	fi
	echo $file.ft$fhr >>temp.parm.$$
	fh=`expr $fh + $intvl`
	count=`expr $count + 1`
done
count=`expr $count - 1`
#
echo "$count" >>grmean.$file.$fhs-$fhe.parm
cat temp.parm.$$ >>grmean.$file.$fhs-$fhe.parm
echo "-2" >>grmean.$file.$fhs-$fhe.parm
echo "$fhe" >>grmean.$file.$fhs-$fhe.parm
rm temp.parm.$$
#
ulimit
if [ @MACHINE@ = cray -o @MACHINE@ = t90 -o @MACHINE@ = t3e ] ; then
	assign -R
fi
@LIBS_DIR@/etc/grmean.x <grmean.$file.$fhs-$fhe.parm \
	>grmean.$file.$fhs-$fhe.out2 2>grmean.$file.$fhs-$fhe.err
if [ $? -ne 0 ] ; then
	echo `date` - grmean for  $file $fhs-$fhe execution failed 
	echo "`date` $0: grmean of $file $fhs-$fhe failed." >>ERROR.out
	exit 8
fi
rm grmean.$file.$fhs-$fhe.parm
rm grmean.$file.$fhs-$fhe.out2
rm grmean.$file.$fhs-$fhe.err                                    
rm grmean.out
#
