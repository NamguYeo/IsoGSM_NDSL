#define IGRD12 igrd12
#define IGRD12P igrd12p
#define IGRD1P igrd1p
#define IGRD igrd
#define JGRD12P jgrd12p
#define JGRD1P jgrd1p
#define LEVS levs
#define LONFP lonfp
      subroutine flxco2(ipts,swc,swh,csm,daytm,dflx)                                 
#ifdef CRAY_THREAD
cfpp$ noconcur r                                                                
#endif
c********************************************************************           
c  compute the absorption due to co2. ref: chou (j. climate, 1990,              
c     209-217)                                                                  
c  the effect of co2 absorption below the cloud top is neglected.               
c  input variables:                                                             
c     swc,swh     : column amount of co2 and water vapor                        
c     csm         : secant of solar zenith angle                                
c     daytm       : daytime flag                                                
c  output variables:                                                            
c     dflx        : flux reduction due to co2 for clear sky                     
c                                                                               
c********************************************************************           
c                                                                               
#include <paramodel.h>
#include <rdparm.h>
                      d i m e n s i o n                                         
c-jh    1  csm(imax),     swc(imbx,l),   swh(imbx,l)                               
     1  csm(imax),     swc(imbx,lp1),   swh(imbx,lp1)
     2, dflx(imbx,lp1),               cah(22,19)                                
      logical daytm(imax)                                                       
c ...  co2 look-up table .............                                          
       data      (cah(i,1),  i=1,22)    / 0.9923,0.9922,0.9921,0.9920,          
     1 0.9916,0.9910,0.9899,0.9882,0.9856,0.9818,0.9761,0.9678,0.9558,          
     1 0.9395,0.9188,0.8945,0.8675,0.8376,0.8029,0.7621,0.7154,0.6647 /         
     2,          (cah(i,2),  i=1,22)    / 0.9876,0.9876,0.9875,0.9873,          
     2 0.9870,0.9864,0.9854,0.9837,0.9811,0.9773,0.9718,0.9636,0.9518,          
     2 0.9358,0.9153,0.8913,0.8647,0.8350,0.8005,0.7599,0.7133,0.6627 /         
     3,          (cah(i,3),  i=1,22)    / 0.9808,0.9807,0.9806,0.9805,          
     3 0.9802,0.9796,0.9786,0.9769,0.9744,0.9707,0.9653,0.9573,0.9459,          
     3 0.9302,0.9102,0.8866,0.8604,0.8311,0.7969,0.7565,0.7101,0.6596 /         
c                                                                               
       data      (cah(i,4),  i=1,22)    / 0.9708,0.9708,0.9707,0.9705,          
     1 0.9702,0.9697,0.9687,0.9671,0.9647,0.9612,0.9560,0.9483,0.9372,          
     1 0.9221,0.9027,0.8798,0.8542,0.8253,0.7916,0.7515,0.7054,0.6551 /         
     2,          (cah(i,5),  i=1,22)    / 0.9568,0.9568,0.9567,0.9565,          
     2 0.9562,0.9557,0.9548,0.9533,0.9510,0.9477,0.9428,0.9355,0.9250,          
     2 0.9106,0.8921,0.8700,0.8452,0.8171,0.7839,0.7443,0.6986,0.6486 /         
     3,          (cah(i,6),  i=1,22)    / 0.9377,0.9377,0.9376,0.9375,          
     3 0.9372,0.9367,0.9359,0.9345,0.9324,0.9294,0.9248,0.9181,0.9083,          
     3 0.8948,0.8774,0.8565,0.8328,0.8055,0.7731,0.7342,0.6890,0.6395 /         
c                                                                               
       data      (cah(i,7),  i=1,22)    / 0.9126,0.9126,0.9125,0.9124,          
     1 0.9121,0.9117,0.9110,0.9098,0.9079,0.9052,0.9012,0.8951,0.8862,          
     1 0.8739,0.8579,0.8385,0.8161,0.7900,0.7585,0.7205,0.6760,0.6270 /         
     2,          (cah(i,8),  i=1,22)    / 0.8809,0.8809,0.8808,0.8807,          
     2 0.8805,0.8802,0.8796,0.8786,0.8770,0.8747,0.8712,0.8659,0.8582,          
     2 0.8473,0.8329,0.8153,0.7945,0.7697,0.7394,0.7024,0.6588,0.6105 /         
     3,          (cah(i,9),  i=1,22)    / 0.8427,0.8427,0.8427,0.8426,          
     3 0.8424,0.8422,0.8417,0.8409,0.8397,0.8378,0.8350,0.8306,0.8241,          
     3 0.8148,0.8023,0.7866,0.7676,0.7444,0.7154,0.6796,0.6370,0.5897 /         
c                                                                               
       data      (cah(i,10), i=1,22)    / 0.7990,0.7990,0.7990,0.7989,          
     1 0.7988,0.7987,0.7983,0.7978,0.7969,0.7955,0.7933,0.7899,0.7846,          
     1 0.7769,0.7664,0.7528,0.7357,0.7141,0.6866,0.6520,0.6108,0.5646 /         
     2,          (cah(i,11), i=1,22)    / 0.7515,0.7515,0.7515,0.7515,          
     2 0.7514,0.7513,0.7511,0.7507,0.7501,0.7491,0.7476,0.7450,0.7409,          
     2 0.7347,0.7261,0.7144,0.6992,0.6793,0.6533,0.6203,0.5805,0.5357 /         
     3,          (cah(i,12), i=1,22)    / 0.7020,0.7020,0.7020,0.7019,          
     3 0.7019,0.7018,0.7017,0.7015,0.7011,0.7005,0.6993,0.6974,0.6943,          
     3 0.6894,0.6823,0.6723,0.6588,0.6406,0.6161,0.5847,0.5466,0.5034 /         
c                                                                               
       data      (cah(i,13), i=1,22)    / 0.6518,0.6518,0.6518,0.6518,          
     1 0.6518,0.6517,0.6517,0.6515,0.6513,0.6508,0.6500,0.6485,0.6459,          
     1 0.6419,0.6359,0.6273,0.6151,0.5983,0.5755,0.5458,0.5095,0.4681 /         
     2,          (cah(i,14), i=1,22)    / 0.6017,0.6017,0.6017,0.6017,          
     2 0.6016,0.6016,0.6016,0.6015,0.6013,0.6009,0.6002,0.5989,0.5967,          
     2 0.5932,0.5879,0.5801,0.5691,0.5535,0.5322,0.5043,0.4700,0.4308 /         
     3,          (cah(i,15), i=1,22)    / 0.5518,0.5518,0.5518,0.5518,          
     3 0.5518,0.5518,0.5517,0.5516,0.5514,0.5511,0.5505,0.5493,0.5473,          
     3 0.5441,0.5393,0.5322,0.5220,0.5076,0.4878,0.4617,0.4297,0.3929 /         
c                                                                               
       data      (cah(i,16), i=1,22)    / 0.5031,0.5031,0.5031,0.5031,          
     1 0.5031,0.5030,0.5030,0.5029,0.5028,0.5025,0.5019,0.5008,0.4990,          
     1 0.4960,0.4916,0.4850,0.4757,0.4624,0.4441,0.4201,0.3904,0.3564 /         
     2,          (cah(i,17), i=1,22)    / 0.4565,0.4565,0.4565,0.4564,          
     2 0.4564,0.4564,0.4564,0.4563,0.4562,0.4559,0.4553,0.4544,0.4527,          
     2 0.4500,0.4460,0.4400,0.4315,0.4194,0.4028,0.3809,0.3538,0.3227 /         
     3,          (cah(i,18), i=1,22)    / 0.4122,0.4122,0.4122,0.4122,          
     3 0.4122,0.4122,0.4122,0.4121,0.4120,0.4117,0.4112,0.4104,0.4089,          
     3 0.4065,0.4029,0.3976,0.3900,0.3792,0.3643,0.3447,0.3203,0.2923 /         
c                                                                               
       data      (cah(i,19), i=1,22)    / 0.3696,0.3696,0.3696,0.3696,          
     1 0.3696,0.3696,0.3695,0.3695,0.3694,0.3691,0.3687,0.3680,0.3667,          
     1 0.3647,0.3615,0.3570,0.3504,0.3409,0.3279,0.3106,0.2892,0.2642 /         
                                                                                
c ... table look-up for the absorption due to co2                               
c     0.0343 is the fraction of solar flux in the co2 bands                     
c     df is the absorption of solar radiation due to co2                        
c                                                                               
c --- flux reduction due to co2                                                 
      xx = 1.0e0 / 0.3e0                                                      
      do 20 k=2,lp1                                                             
      do 20 i=1,ipts                                                            
       if (daytm(i)) then                                                       
        clog = alog10(swc(i,k) / csm(i))                                        
        wlog = alog10(swh(i,k) / csm(i))                                        
        ic = int( (clog+3.15e0) * xx + 1.0e0)                                 
        iw = int( (wlog+4.15e0) * xx + 1.0e0)                                 
        ic = max(2, min(22, ic))                                                
        iw = max(2, min(19, iw))                                                
        ic1 = ic - 1                                                            
        iw1 = iw - 1                                                            
        dc = (3.0 + clog) * xx - float(ic-2)                                    
        dw = (4.0 + wlog) * xx - float(iw-2)                                    
        x1 = cah(1,  iw1) + (cah(1,  iw) - cah(1,  iw1)) * dw                   
        x2 = cah(ic1,iw1) + (cah(ic1,iw) - cah(ic1,iw1)) * dw                   
        y2 = x2 + (cah(ic,iw1) - cah(ic1,iw1)) * dc                             
        dflx(i,k) = dflx(i,k) + 0.0343 * amax1(0.0, x1-y2)                      
       end if                                                                   
  20  continue                                                                  
c                                                                               
      return                                                                    
      end                                                                       
